<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.dao.system.DeviceAlarmInfoDao" >
  <resultMap id="BaseResultMap" type="DeviceAlarmInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
    <result column="settle_user_id" property="settleUserId" jdbcType="INTEGER" />
    <result column="settle_nick_name" property="settleNickName" jdbcType="VARCHAR" />
    <result column="settle_type" property="settleType" jdbcType="VARCHAR" />
    <result column="is_settle" property="isSettle" jdbcType="INTEGER" />
    <result column="is_scene" property="isScene" jdbcType="INTEGER" />
    <result column="service_type" property="serviceType" jdbcType="VARCHAR" />
    <result column="settle_record" property="settleRecord" jdbcType="VARCHAR" />
    <result column="settle_time" property="settleTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    serial_no, type, description, collect_time, settle_user_id, settle_nick_name,
    settle_type, is_settle, is_scene, service_type, settle_record, settle_time
  </sql>
  <sql id="table">device_alarm_info</sql>

  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, <include refid="Base_Column_List" />
    from <include refid="table"/>
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="DeviceAlarmInfo"  useGeneratedKeys="true" keyProperty="id">
    insert into <include refid="table"/> (<include refid="Base_Column_List"/>)
    values ( #{serialNo,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
      #{description,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, #{settleUserId,jdbcType=INTEGER}, 
      #{settleNickName,jdbcType=VARCHAR}, #{settleType,jdbcType=VARCHAR}, #{isSettle,jdbcType=INTEGER}, 
      #{isScene,jdbcType=INTEGER}, #{serviceType,jdbcType=VARCHAR}, #{settleRecord,jdbcType=VARCHAR}, 
      #{settleTime,jdbcType=TIMESTAMP})
  </insert>

  <update id="update" parameterType="DeviceAlarmInfo" >
    update <include refid="Base_Column_List" />
    <set >
      <if test="serialNo != null" >
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null" >
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settleUserId != null" >
        settle_user_id = #{settleUserId,jdbcType=INTEGER},
      </if>
      <if test="settleNickName != null" >
        settle_nick_name = #{settleNickName,jdbcType=VARCHAR},
      </if>
      <if test="settleType != null" >
        settle_type = #{settleType,jdbcType=VARCHAR},
      </if>
      <if test="isSettle != null" >
        is_settle = #{isSettle,jdbcType=INTEGER},
      </if>
      <if test="isScene != null" >
        is_scene = #{isScene,jdbcType=INTEGER},
      </if>
      <if test="serviceType != null" >
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="settleRecord != null" >
        settle_record = #{settleRecord,jdbcType=VARCHAR},
      </if>
      <if test="settleTime != null" >
        settle_time = #{settleTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="condition">
    <where>
      <if test="serialNo!=null">
        AND serial_no = #{serialNo}
      </if>
      <if test="type!=null">
        AND type = #{type}
      </if>

    </where>
  </sql>

  <select id="queryListBy" resultMap="BaseResultMap" parameterType="map">
    SELECT id, <include refid="Base_Column_List"/>
    FROM <include refid="table"/>
    <include refid="condition"/>
    ORDER BY id DESC
    LIMIT #{start},#{size}
  </select>

  <select id="queryCountBy" resultType="Integer" parameterType="map">
    SELECT COUNT(id)
    FROM <include refid="table"/>
    <include refid="condition"/>
  </select>

  <select id="queryListByCondition" resultMap="BaseResultMap" parameterType="map">
    SELECT id, <include refid="Base_Column_List"/>
    FROM <include refid="table"/>
    <include refid="condition"/>
    ORDER BY id DESC
  </select>

</mapper>